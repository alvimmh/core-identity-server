/**
 * Minified by jsDelivr using Terser v5.9.0.
 * Original file: /npm/qrcode@1.5.0/lib/core/mode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const VersionCheck=require("./version-check"),Regex=require("./regex");function fromString(r){if("string"!=typeof r)throw new Error("Param is not a string");switch(r.toLowerCase()){case"numeric":return exports.NUMERIC;case"alphanumeric":return exports.ALPHANUMERIC;case"kanji":return exports.KANJI;case"byte":return exports.BYTE;default:throw new Error("Unknown mode: "+r)}}exports.NUMERIC={id:"Numeric",bit:1,ccBits:[10,12,14]},exports.ALPHANUMERIC={id:"Alphanumeric",bit:2,ccBits:[9,11,13]},exports.BYTE={id:"Byte",bit:4,ccBits:[8,16,16]},exports.KANJI={id:"Kanji",bit:8,ccBits:[8,10,12]},exports.MIXED={bit:-1},exports.getCharCountIndicator=function(r,t){if(!r.ccBits)throw new Error("Invalid mode: "+r);if(!VersionCheck.isValid(t))throw new Error("Invalid version: "+t);return t>=1&&t<10?r.ccBits[0]:t<27?r.ccBits[1]:r.ccBits[2]},exports.getBestModeForData=function(r){return Regex.testNumeric(r)?exports.NUMERIC:Regex.testAlphanumeric(r)?exports.ALPHANUMERIC:Regex.testKanji(r)?exports.KANJI:exports.BYTE},exports.toString=function(r){if(r&&r.id)return r.id;throw new Error("Invalid mode")},exports.isValid=function(r){return r&&r.bit&&r.ccBits},exports.from=function(r,t){if(exports.isValid(r))return r;try{return fromString(r)}catch(r){return t}};
//# sourceMappingURL=/sm/e1311cdafafc9afd3a9130f19bf94933c86365e04708583aee1c93df0ce33761.map